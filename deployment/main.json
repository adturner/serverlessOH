{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1008.15138",
      "templateHash": "17318211927655309581"
    }
  },
  "parameters": {
    "resourceTags": {
      "type": "object",
      "defaultValue": {
        "environmentName": "Azure Serverless OpenHack",
        "challengeTitle": "Challenge 3 Ice Cream Ratings Deploy Infrastructure",
        "expirationDate": "12/21/2021"
      },
      "metadata": {
        "description": "Tags to be applied to resources that are deployed in this template"
      }
    },
    "deploymentPrefix": {
      "type": "string",
      "maxLength": 7,
      "minLength": 3,
      "metadata": {
        "description": "Deployment Prefix - all resources names created by this template will start with this prefix"
      }
    }
  },
  "functions": [],
  "variables": {
    "tenantId": "[subscription().tenantId]",
    "resourceLocation": "[resourceGroup().location]",
    "uniqueId": "[take(uniqueString(subscription().id, resourceGroup().id, parameters('deploymentPrefix')), 6)]",
    "kvName": "[format('{0}{1}kv', parameters('deploymentPrefix'), variables('uniqueId'))]",
    "laName": "[format('{0}{1}laws', parameters('deploymentPrefix'), variables('uniqueId'))]",
    "storageAccountName": "[format('{0}{1}funstg', parameters('deploymentPrefix'), variables('uniqueId'))]",
    "appServicePlanName": "[format('{0}{1}apppln', parameters('deploymentPrefix'), variables('uniqueId'))]",
    "functionAppName": "[format('{0}{1}ratings', parameters('deploymentPrefix'), variables('uniqueId'))]",
    "ratingsAppInsightName": "[format('{0}{1}ratingsai', parameters('deploymentPrefix'), variables('uniqueId'))]",
    "ratingsDatabaseName": "[format('{0}{1}ratingsdb', parameters('deploymentPrefix'), variables('uniqueId'))]"
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2020-03-01-preview",
      "name": "[variables('laName')]",
      "location": "[variables('resourceLocation')]",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "retentionInDays": 30,
        "sku": {
          "name": "PerGB2018"
        }
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2017-05-01-preview",
      "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', variables('laName'))]",
      "name": "diagnosticSettings",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]",
        "logs": [
          {
            "category": "Audit",
            "enabled": true,
            "retentionPolicy": {
              "days": 7,
              "enabled": true
            }
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "days": 7,
              "enabled": true
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]"
      ]
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2019-09-01",
      "name": "[variables('kvName')]",
      "location": "[variables('resourceLocation')]",
      "properties": {
        "tenantId": "[variables('tenantId')]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "softDeleteRetentionInDays": 7,
        "enableSoftDelete": true,
        "enableRbacAuthorization": false,
        "networkAcls": {
          "defaultAction": "Allow",
          "bypass": "AzureServices"
        }
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.KeyVault/vaults/{0}', variables('kvName'))]",
      "name": "defaultSettings",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]",
        "logs": [
          {
            "categoryGroup": "allLogs",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": 7
            }
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": 7
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.KeyVault/vaults', variables('kvName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[variables('resourceLocation')]",
      "tags": "[parameters('resourceTags')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "accessTier": "Hot",
        "supportsHttpsTrafficOnly": true,
        "allowBlobPublicAccess": false,
        "isHnsEnabled": false,
        "isNfsV3Enabled": false,
        "minimumTlsVersion": "TLS1_2"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/default', variables('storageAccountName'))]",
      "properties": {
        "cors": {
          "corsRules": []
        },
        "deleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/default', variables('storageAccountName'))]",
      "properties": {
        "cors": {
          "corsRules": []
        },
        "shareDeleteRetentionPolicy": {
          "enabled": true,
          "days": 7
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/queueServices",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/default', variables('storageAccountName'))]",
      "properties": {
        "cors": {
          "corsRules": []
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts/tableServices",
      "apiVersion": "2021-06-01",
      "name": "[format('{0}/default', variables('storageAccountName'))]",
      "properties": {
        "cors": {
          "corsRules": []
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', variables('storageAccountName'))]",
      "name": "defaultSettings",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]",
        "metrics": [
          {
            "category": "Transaction",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": 7
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-09-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[variables('resourceLocation')]",
      "tags": "[parameters('resourceTags')]",
      "sku": {
        "name": "S1"
      },
      "kind": "functionapp"
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/serverfarms/{0}', variables('appServicePlanName'))]",
      "name": "defaultSettings",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]",
        "logs": [],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": 7
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2021-02-01",
      "name": "[variables('functionAppName')]",
      "location": "[variables('resourceLocation')]",
      "tags": "[parameters('resourceTags')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "functionapp",
      "properties": {
        "enabled": true,
        "httpsOnly": true,
        "clientAffinityEnabled": false,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "ftpsState": "FtpsOnly",
          "minTlsVersion": "1.2"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.Web/sites/{0}', variables('functionAppName'))]",
      "name": "defaultSettings",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]",
        "logs": [
          {
            "category": "FunctionAppLogs",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": 7
            }
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": 7
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]",
        "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('ratingsAppInsightName')]",
      "location": "[variables('resourceLocation')]",
      "kind": "web",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-07-01-preview",
      "name": "[variables('ratingsDatabaseName')]",
      "location": "[variables('resourceLocation')]",
      "tags": "[parameters('resourceTags')]",
      "kind": "GlobalDocumentDB",
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Eventual"
        },
        "databaseAccountOfferType": "Standard",
        "defaultIdentity": "SystenAssginedIdentity"
      }
    },
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.DocumentDB/databaseAccounts/{0}', variables('ratingsDatabaseName'))]",
      "name": "defaultSettings",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]",
        "logs": [
          {
            "category": "DataPlaneRequests",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": 7
            }
          },
          {
            "category": "TableApiRequests",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": 7
            }
          }
        ],
        "metrics": [
          {
            "category": "Requests",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": 7
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('laName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('ratingsDatabaseName'))]"
      ]
    }
  ]
}